{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"AnyFer üê¶"}},"allMarkdownRemark":{"nodes":[{"excerpt":"I have worked with Core Data long time ago and left with a bad impression about the framework. I‚Äôve never used it again (started using Realm‚Ä¶","fields":{"slug":"/2021-01-16/"},"frontmatter":{"date":"January 16, 2021","title":"Persistence with Core Data and SwiftUI","description":null}},{"excerpt":"The Container We call containers in SwiftUI to those views which can render other views passed by argument. Containers are central to‚Ä¶","fields":{"slug":"/2021-01-09/"},"frontmatter":{"date":"January 09, 2021","title":"Custom Containers in SwiftUI","description":null}},{"excerpt":"What is the purpose of language constructs and software architectures in software development? The answer, in my opinion, is to bring more‚Ä¶","fields":{"slug":"/2021-01-03/"},"frontmatter":{"date":"January 03, 2021","title":"Noise and sound","description":null}},{"excerpt":"In the previous article, we have talked about how functional purity and an unidirectional architecture by using the Action-State-Reducer‚Ä¶","fields":{"slug":"/2020-12-27/"},"frontmatter":{"date":"December 27, 2020","title":"Unidirectional Architectures and time traveling in Swift: II","description":null}},{"excerpt":"Time traveling in Swift is possible. This is a series that describe how Unidirectional architectures can be applied in Swift and how we can‚Ä¶","fields":{"slug":"/2020-12-21/"},"frontmatter":{"date":"December 21, 2020","title":"Unidirectional Architectures and time traveling in Swift: I","description":null}},{"excerpt":"Do you have to test private methods? There is a lot said about this. Just check this thread. The short answer is no. The slightly longer‚Ä¶","fields":{"slug":"/2020-12-13/"},"frontmatter":{"date":"December 13, 2020","title":"On testing private methods","description":null}},{"excerpt":"Few things draw more my attention to programming than the ability to abstract complex domains and concepts behind concise, beautiful‚Ä¶","fields":{"slug":"/2020-12-07/"},"frontmatter":{"date":"December 07, 2020","title":"On abstractions and architecture","description":null}},{"excerpt":"Using Quick and Nimble is a great support for your BDD code, but keep in mind they are just tools, and all of this can be written in XCTest‚Ä¶","fields":{"slug":"/2020-11-15/"},"frontmatter":{"date":"November 15, 2020","title":"Starting Quick / BDD in iOS","description":"Starting Quick / BDD in iOS"}},{"excerpt":"Introduction The last couple of weeks I had to work on a task that demanded most of my time. The assignment was about increasing the code‚Ä¶","fields":{"slug":"/2020-08-19/"},"frontmatter":{"date":"August 19, 2020","title":"Testing the Untested","description":"Testing a codebase that was not designed for being tested"}}]}},"pageContext":{}},"staticQueryHashes":["2841359383","916993862"]}